plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'com.modrinth.minotaur' version '2.+'
}

architectury {
    platformSetupLoomIde()
    forge()
}

configurations {
    common
    shadowCommon
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}

dependencies {
    // Minecraft
    forge "net.minecraftforge:forge:${project.forge_version}"
    // Dependencies
    modApi "dev.architectury:architectury-forge:${project.architectury_api_version}"
    // Common
    common(project(path: ":${parent.name}:common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":${parent.name}:common", configuration: "transformProductionForge")) { transitive = false }
}

processResources {
    filesMatching('META-INF/mods.toml') {
        expand "version": project.version
    }
}

shadowJar {
    exclude 'fabric.mod.json'
    configurations = [project.configurations.shadowCommon]
    archiveClassifier.set 'dev-shadow'
}

remapJar {
    inputFile.set shadowJar.archiveFile
    dependsOn shadowJar
    archiveClassifier.set null
}

jar {
    archiveClassifier.set 'dev'
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

modrinth {
    token = System.getenv('MODRINTH_TOKEN')
    projectId = 'oresoresores'
    versionName = "Ores Ores Ores ${version} (Forge 1.18.2)"
    versionNumber = version as String
    versionType = 'alpha'
    uploadFile = remapJar
    gameVersions.set(['1.18.2'])
    loaders.set(['forge'])
    dependencies {
        required.project 'architectury-api'
    }
    changelog = new File(rootProject.projectDir, 'CHANGELOG.md').text
}