plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'com.modrinth.minotaur' version '2.+'
}

architectury {
    platformSetupLoomIde()
    fabric()
}

configurations {
    common
    shadowCommon
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common
}

dependencies {
    // Minecraft
    modImplementation "net.fabricmc:fabric-loader:${project.fabric_loader_version}"
    // Dependencies
    modApi "dev.architectury:architectury-fabric:${project.architectury_api_version}"
    //modApi "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
    // Common
    common(project(path: ":${parent.name}:common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":${parent.name}:common", configuration: "transformProductionFabric")) { transitive false }
}

processResources {
    filesMatching('fabric.mod.json') {
        expand 'version': project.version, 'minecraft_version': project.minecraft_version, 'fabric_loader_version': project.fabric_loader_version, 'architectury-api': project.architectury_api_version
    }
}

shadowJar {
    configurations = [project.configurations.shadowCommon]
    archiveClassifier.set 'dev-shadow'
}

remapJar {
    inputFile.set shadowJar.archiveFile
    dependsOn shadowJar
    archiveClassifier.set null
}

jar {
    archiveClassifier.set 'dev'
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

modrinth {
    token = System.getenv('MODRINTH_TOKEN')
    projectId = 'oresoresores'
    versionName = '[1.18.2 Fabric]'
    versionNumber = project.version
    versionType = 'alpha'
    uploadFile = remapJar
    gameVersions = ['1.18.2']
    loaders = ['fabric', 'quilt']
    dependencies {
        required.project 'architectury-api'
    }
    changelog = new File(rootProject.projectDir, 'changelog.md').text.replace('%version%', project.version)
}